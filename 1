CREATE OR REPLACE FUNCTION allocate_repayments
RETURN SYS_REFCURSOR
AS
  result_cursor SYS_REFCURSOR;
  TYPE repayment_arr_type IS TABLE OF  repayment%ROWTYPE INDEX BY BINARY_INTEGER;
  repayments_arr repayment_arr_type;
  TYPE percent_rec_type IS RECORD(
    contact_id INT,
    percent_date DATE,
    percent_amount NUMBER(15,2),
    rn INT
  );
  rec_percent  percent_rec_type;
  remaining_repayment NUMBER(15,2);
  i INT;
  temp_repayment repayment%ROWTYPE;
  new_repayment   repayment%ROWTYPE;
  j INT := 1;
  
  CURSOR percent_cursor IS
    SELECT p.contact_id, p.percent_date, p.percent_amount, rn 
    FROM (SELECT percent.contact_id, percent.percent_date, percent.percent_amount, ROW_NUMBER() OVER (PARTITION BY percent.contact_id ORDER BY percent.percent_date) as rn FROM percent) p 
    ORDER BY percent_date;
  
BEGIN
  -- Populate repayment array
  
   FOR repayment_arr IN (SELECT repayment_date, repayment_amount FROM repayment ORDER BY repayment_date) 
        LOOP
            new_repayment.repayment_date := repayment_arr.repayment_date;
            new_repayment.repayment_amount := repayment_arr.repayment_amount;
            repayments_arr(j) := new_repayment;
            j := j + 1;
        END LOOP;
    
  OPEN percent_cursor;
  
  OPEN result_cursor FOR
  LOOP
    FETCH percent_cursor INTO rec_percent;
    EXIT WHEN percent_cursor%NOTFOUND;
    
    remaining_repayment := 0;
    i := 1;
    
    WHILE i <= repayments_arr.COUNT LOOP
    
        IF (repayments_arr(i)).repayment_amount > 0 THEN
          
           IF ((repayments_arr(i)).repayment_amount >= rec_percent.percent_amount - remaining_repayment) THEN
              
              
               SELECT rec_percent.contact_id, rec_percent.percent_date, rec_percent.percent_amount, (rec_percent.percent_amount - remaining_repayment), (repayments_arr(i)).repayment_date 
                  FROM dual;
				    
                 
                temp_repayment := repayments_arr(i);
                temp_repayment.repayment_amount := (repayments_arr(i)).repayment_amount - (rec_percent.percent_amount - remaining_repayment);
                repayments_arr(i) := temp_repayment;
                remaining_repayment := rec_percent.percent_amount;

                IF remaining_repayment = rec_percent.percent_amount THEN
                    EXIT;
                END IF;
                 
           ELSE
              
              SELECT 101, rec_percent.percent_date, rec_percent.percent_amount, (repayments_arr(i)).repayment_amount, (repayments_arr(i)).repayment_date
                  FROM dual;
              remaining_repayment := remaining_repayment + (repayments_arr(i)).repayment_amount;
                temp_repayment := repayments_arr(i);
                temp_repayment.repayment_amount := 0;
                repayments_arr(i) := temp_repayment;
           END IF;
      END IF;
      i := i + 1;
    END LOOP;
    
    j := i;
  END LOOP;
    CLOSE percent_cursor;
  RETURN result_cursor;
END;
