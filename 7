CREATE OR REPLACE TYPE repayment_rec_type AS OBJECT (
    contract_id       VARCHAR2(32),
	currency_ccode    VARCHAR2(3),
	rate_type         VARCHAR2(15),
	contract_rate     NUMBER,
	percent_amount    NUMBER,
	rate_begin_date   DATE,
	rate_end_date     DATE,
    repayment_amount  NUMBER,
    repayment_date    DATE
);
/

CREATE OR REPLACE TYPE allocation_row_type AS OBJECT (
    contract_id      VARCHAR2(32),
    rate_begin_date   DATE,
    percent_amount    NUMBER,
    repayment_amount  NUMBER,
    repayment_date    DATE
);
/

CREATE OR REPLACE FUNCTION allocate_repayments
    RETURN allocation_table_type PIPELINED
IS
  TYPE percent_rec_type IS RECORD (
    contract_id      VARCHAR2(32 CHAR),
    currency_ccode  VARCHAR2(3 CHAR),
    rate_type       VARCHAR2(15),
    contract_rate    NUMBER,
    percent_amount  NUMBER(18,2),
    rate_begin_date DATE,
    rate_end_date   DATE,
    rn             NUMBER
  );

    rec_percent         percent_rec_type;
    CURSOR percent_cursor IS
        SELECT
            p.contract_id,
            p.currency_ccode,
            p.rate_type,
            p.contract_rate,
            p.percent_amount,
            p.rate_begin_date,
            p.rate_end_date,
            rn
        FROM (
        SELECT
            percent.contract_id,
            percent.currency_ccode,
            percent.rate_type,
            percent.contract_rate,
            percent.percent_amount,
            percent.rate_begin_date,
            percent.rate_end_date,
            ROW_NUMBER() OVER (PARTITION BY percent.contract_id ORDER BY percent.rate_begin_date) AS rn
        FROM
            percent
        ) p
        ORDER BY
            p.rate_begin_date;

    TYPE repayment_fetch_rec_type IS RECORD (
             contract_id        VARCHAR2(32),
             currency_ccode     VARCHAR2(3),
             rate_type          VARCHAR2(15),
             contract_rate       NUMBER,
             percent_amount      NUMBER(18,2),
             rate_begin_date    DATE,
             rate_end_date      DATE,
             repayment_date      DATE,
             repayment_amount    NUMBER
    );

    repayment_rec_fetch    repayment_fetch_rec_type;
    repayment_rec           repayment_rec_type;

    CURSOR repayment_cursor(p_contract_id VARCHAR2) IS
       SELECT
             p.contract_id,
             p.currency_ccode,
             p.rate_type,
             p.contract_rate,
             p.percent_amount,
             p.rate_begin_date,
             p.rate_end_date,
            r.repayment_date,
             r.repayment_amount
        FROM repayment r
         JOIN percent p ON r.contract_id = p.contract_id
        WHERE r.contract_id = p_contract_id
        ORDER BY r.repayment_date;

    remaining_repayment     NUMBER(18, 2) := 0;
    current_repayment_amount  NUMBER(18, 2);
    allocated_repayment_amount NUMBER(18, 2);
    alloc_row               allocation_row_type;
    err_msg                 VARCHAR2(200);
    repayment_amount_temp    NUMBER(18,2);
    remaining_repayment_temp NUMBER(18,2);
    current_repayment_amount_remaining NUMBER(18,2);
BEGIN
    FOR rec_percent IN percent_cursor
        LOOP
            remaining_repayment := 0;
            remaining_repayment_temp := rec_percent.percent_amount;
            OPEN repayment_cursor(rec_percent.contract_id);
              LOOP
                FETCH repayment_cursor INTO repayment_rec_fetch;
                 EXIT WHEN repayment_cursor%NOTFOUND;
                repayment_rec :=  repayment_rec_type(
                   repayment_rec_fetch.contract_id,
                   repayment_rec_fetch.currency_ccode,
                   repayment_rec_fetch.rate_type,
                   repayment_rec_fetch.contract_rate,
                   repayment_rec_fetch.percent_amount,
                   repayment_rec_fetch.rate_begin_date,
                   repayment_rec_fetch.rate_end_date,
                    repayment_rec_fetch.repayment_amount,
                   repayment_rec_fetch.repayment_date
                );
                 current_repayment_amount_remaining := repayment_rec.repayment_amount;
                  IF (current_repayment_amount_remaining > 0) THEN
                       repayment_amount_temp := current_repayment_amount_remaining;
                        IF (repayment_amount_temp >= remaining_repayment_temp) THEN
                           current_repayment_amount := remaining_repayment_temp;
                           allocated_repayment_amount := current_repayment_amount;
                            alloc_row := allocation_row_type(
                                 rec_percent.contract_id,
                                 rec_percent.rate_begin_date,
                                 rec_percent.percent_amount,
                                 allocated_repayment_amount,
                                 repayment_rec.repayment_date
                            );
                           PIPE ROW(alloc_row);
                           current_repayment_amount_remaining := repayment_amount_temp - current_repayment_amount;
                            remaining_repayment_temp := 0;
                        ELSE
                          current_repayment_amount := repayment_amount_temp;
                           allocated_repayment_amount := current_repayment_amount;
                           alloc_row := allocation_row_type(
                                  rec_percent.contract_id,
                                  rec_percent.rate_begin_date,
                                  rec_percent.percent_amount,
                                  allocated_repayment_amount,
                                   repayment_rec.repayment_date
                           );
                             PIPE ROW(alloc_row);
                            remaining_repayment_temp := remaining_repayment_temp - repayment_amount_temp;
                             current_repayment_amount_remaining := 0;
                        END IF;
                END IF;
                IF remaining_repayment_temp = 0 THEN
                       EXIT;
                END IF;

             END LOOP;

             CLOSE repayment_cursor;
              IF remaining_repayment_temp > 0 THEN
              alloc_row := allocation_row_type(
                  rec_percent.contract_id,
                  rec_percent.rate_begin_date,
                  rec_percent.percent_amount,
                  remaining_repayment_temp,
                  NULL  -- Дата выплаты NULL, т.к. ее нет
              );
             PIPE ROW(alloc_row);
            END IF;
        END LOOP;
    RETURN;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      err_msg := 'No data found in the percent cursor.';
      RAISE_APPLICATION_ERROR(-20001, err_msg);
    WHEN OTHERS THEN
        err_msg := 'Error in allocate_repayments: ' || SQLERRM || ' SQLCODE: ' || SQLCODE;
        RAISE_APPLICATION_ERROR(-20002, err_msg);
END;
